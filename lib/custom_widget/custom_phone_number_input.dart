import 'package:flutter/material.dart';

class Country {
  final String name;
  final String flag; // –ò–∫–æ–Ω–∫–∞ —Ñ–ª–∞–≥–∞
  final String dialCode; // –ö–æ–¥ —Å—Ç—Ä–∞–Ω—ã

  Country({
    required this.name,
    required this.flag,
    required this.dialCode,
  });
}

List<Country> countries = [
  Country(name: "TJ", flag: "üáπüáØ", dialCode: "+992"),
  Country(name: "RU", flag: "üá∑üá∫", dialCode: "+7"),
  Country(name: "UZ", flag: "üá∫üáø", dialCode: "+998"),
  Country(name: "KG", flag: "üá∞üá¨", dialCode: "+996"),
  Country(name: "KZ", flag: "üá∞üáø", dialCode: "+7"),
];

class CustomPhoneNumberInput extends StatefulWidget {
  final TextEditingController controller;
  final Function(String)? onInputChanged; // –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
  final String? Function(String?)? validator;
  final String label; // –ù–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –º–µ—Ç–∫–∏

  CustomPhoneNumberInput({
    required this.controller,
    required this.label,
    this.onInputChanged,
    this.validator,
  });

  @override
  _CustomPhoneNumberInputState createState() => _CustomPhoneNumberInputState();
}

class _CustomPhoneNumberInputState extends State<CustomPhoneNumberInput> {
  Country? selectedCountry;

  @override
  void initState() {
    super.initState();
    selectedCountry = countries.firstWhere((country) => country.name == "TJ");
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          widget.label,
          style: TextStyle(
            fontSize: 16,
            fontWeight: FontWeight.w500,
            fontFamily: 'Gilroy',
            color: Color(0xff1E2E52),
          ),
        ),
        const SizedBox(height: 8),

        // –ü–æ–ª–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã –∏ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        TextFormField(
          controller: widget.controller,
          decoration: InputDecoration(
            hintText: '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
            hintStyle: TextStyle(
              fontFamily: 'Gilroy',
              color: Color(0xff99A4BA),
            ),
            border: OutlineInputBorder(
              borderRadius: BorderRadius.circular(12),
              borderSide: BorderSide.none,
            ),
            filled: true,
            fillColor: Color(0xffF4F7FD),
            contentPadding: EdgeInsets.symmetric(vertical: 10, horizontal: 12),

            // –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–ª–∞–≥–∞ –∏ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã –≤–Ω—É—Ç—Ä–∏ –ø–æ–ª—è
            prefixIcon: DropdownButtonHideUnderline(
              child: DropdownButton<Country>(
                value: selectedCountry,
                dropdownColor: Colors.white, // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–µ–ª—ã–π —Ñ–æ–Ω —Å–ø–∏—Å–∫–∞
                items: countries.map((Country country) {
                  return DropdownMenuItem<Country>(
                    value: country,
                    child: Row(
                      children: [
                        const SizedBox(width: 8),
                        Text(country.flag), // –§–ª–∞–≥ —Å—Ç—Ä–∞–Ω—ã
                        const SizedBox(width: 8),
                        Text(country.dialCode), // –ö–æ–¥ —Å—Ç—Ä–∞–Ω—ã
                      ],
                    ),
                  );
                }).toList(),
                onChanged: (Country? newValue) {
                  setState(() {
                    selectedCountry = newValue;
                    widget.controller.text = ''; // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞
                    if (newValue != null && widget.onInputChanged != null) {
                      widget.onInputChanged!(
                          newValue.dialCode); // –ü–µ—Ä–µ–¥–∞–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã
                    }
                  });
                },
              ),
            ),
          ),
          keyboardType: TextInputType.phone,
          onChanged: (value) {
            // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å –∫–æ–¥–æ–º —Å—Ç—Ä–∞–Ω—ã
            final formattedNumber = (selectedCountry?.dialCode ?? '') + value;
            if (widget.onInputChanged != null) {
              widget.onInputChanged!(
                  formattedNumber); // –ü–µ—Ä–µ–¥–∞—á–∞ –Ω–æ–º–µ—Ä–∞ —Å –∫–æ–¥–æ–º —Å—Ç—Ä–∞–Ω—ã
            }
          },
          validator: widget.validator,
        ),
      ],
    );
  }
}

